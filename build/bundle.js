(()=>{"use strict";function a(d){var e=c[d];if(void 0!==e)return e.exports;var f=c[d]={exports:{}};return b[d](f,f.exports,a),f.exports}var b={"./src/index.js":/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/(a,b,c)=>{c.r(b);var d=c(/*! ./tictactoe */"./src/tictactoe.js"),e=c(/*! ./sass/main.scss */"./src/sass/main.scss");(function(){console.debug("hello webpack"),window.addEventListener("scroll",function(){document.querySelector("header").style.opacity=document.documentElement.scrollTop>150?0:1,console.debug(document.documentElement.scrollTop)});var a=document.getElementById("sword-logo"),b=document.getElementById("facebook"),c=document.getElementById("twitter"),e=document.getElementById("instagram"),f=document.getElementById("send");a.src=".assets/img/SWORD_Health_logo.svg",b.src=".assets/img/facebook.svg",c.src=".assets/img/twitter.svg",e.src=".assets/img/instagram.svg",f.src=".assets/img/send.svg";var g=document.getElementById("select-grid-size");g.addEventListener("change",function(a){console.debug(a.target.value);try{document.getElementById("game-area").style.visibility="visible";var b=new d.TicTacToe(+a.target.value);b.onInit()}catch(a){console.error(a)}})}).call()},"./src/swordgames.js":/*!***************************!*\
  !*** ./src/swordgames.js ***!
  \***************************/(a,b,c)=>{function d(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function e(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function f(a,b,c){return b&&e(a.prototype,b),c&&e(a,c),a}c.r(b),c.d(b,{SwordGames:()=>g});var g=function(){function a(){d(this,a),this.game="tictactoe",this.player="1",this.boardStatus=[],this.winningConditions=[]}return f(a,[{key:"onInit",value:function(){throw"NotImplementedException"}},{key:"buildBoard",value:function(){throw"NotImplementedException"}},{key:"setEventListeners",value:function(){throw"NotImplementedException"}},{key:"onDestroy",value:function(){if("tictactoe"===this.game)for(var a=document.querySelectorAll(".flex-item"),b=a.length,c=0;c<b;c++)a[c].removeEventListener(this.onCellClicked)}}]),a}()},"./src/tictactoe.js":/*!**************************!*\
  !*** ./src/tictactoe.js ***!
  \**************************/(a,b,c)=>{function d(a){"@babel/helpers - typeof";return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},d(a)}function e(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function f(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function g(a,b,c){return b&&f(a.prototype,b),c&&f(a,c),a}function h(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),b&&i(a,b)}function i(a,b){return i=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a},i(a,b)}function j(a){var b=m();return function(){var c,d=n(a);if(b){var e=n(this).constructor;c=Reflect.construct(d,arguments,e)}else c=d.apply(this,arguments);return k(this,c)}}function k(a,b){return b&&("object"===d(b)||"function"==typeof b)?b:l(a)}function l(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function m(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(a){return!1}}function n(a){return n=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)},n(a)}c.r(b),c.d(b,{TicTacToe:()=>p});var o=c(/*! ./swordgames */"./src/swordgames.js"),p=function(a){function b(){var a,d=0<arguments.length&&void 0!==arguments[0]?arguments[0]:3;return e(this,b),a=c.call(this),a.boardSize=d,a.roundWinsByPlayer={player1:0,player2:0},a}h(b,a);var c=j(b);return g(b,[{key:"onInit",value:function(){var a=this;this.winningConditions=Array.from({length:2*this.boardSize+2},function(){return Array(a.boardSize)}),this.boardStatus=Array(this.boardSize*this.boardSize).fill(""),this.buildRows(),this.buildCols(),this.buildLtrDiag(),this.buildRtrDiag(),console.debug(this.winningConditions,this.boardSize),this.buildBoard(),this.setEventListeners()}},{key:"buildRows",value:function(){for(var a=-1,b=0;b<this.boardSize;b++)for(var c=0;c<this.boardSize;c++)++a,this.winningConditions[b][c]=a}},{key:"buildCols",value:function(){for(var a=-1,b=this.winningConditions.length,c=0;c<this.boardSize;c++)for(var d=this.boardSize;d<=b-3;d++)++a,this.winningConditions[d][c]=a}},{key:"buildLtrDiag",value:function(){for(var a=this.winningConditions.length,b=0;b<this.boardSize;b++)this.winningConditions[a-2][b]=b*(this.boardSize+1)}},{key:"buildRtrDiag",value:function(){for(var b=this.boardSize-1,a=this.winningConditions.length,c=0;c<this.boardSize;c++)this.winningConditions[a-1][c]=c*b+b}},{key:"buildBoard",value:function(){for(var a=document.querySelector("#board"),b="",c=-1,d=0;d<this.boardSize;d++){b+="<div class=\"flex-container\">";for(var e=0;e<this.boardSize;e++)++c,b+="<div class=\"flex-item\" data-cell-id=\"".concat(c,"\"></div>");b+="</div>"}a.innerHTML=b}},{key:"setEventListeners",value:function(){for(var a=document.querySelectorAll(".flex-item"),b=a.length,c=0;c<b;c++)a[c].addEventListener("click",this.onCellClicked.bind(this))}},{key:"onCellClicked",value:function(a){try{var b=+a.target.dataset.cellId;if(console.debug("on cell clicked",this.dataset),""!==this.boardStatus[b])return;this.cellPlayedHandler(a.target,b)}catch(a){console.error(a)}}},{key:"cellPlayedHandler",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null,b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:-1;if(!a||-1===b)throw"InvalidCellException";a.classList.add("1"===this.player?"player1":"player2"),this.boardStatus[b]=this.player,this.checkWin()}},{key:"checkWin",value:function(){for(var a,b=this,c=!1,d=!1,e=this.winningConditions.length,f=null,g=function(a){f=b.winningConditions[a];for(var d=[],e=0;e<b.boardSize;e++)d.push(b.boardStatus[f[e]]);return d.some(function(a){return""===a})?"continue":d.every(function(a){return a===d[0]})?(c=!0,"break"):void 0},h=0;h<e&&(a=g(h),"continue"===a||"break"!==a);h++);if(c){for(var i=0;i<this.boardSize;i++){var j=f[i],k=document.querySelector("[data-cell-id=\"".concat(j,"\"]"));k.classList.add("player".concat(this.player,"Win"),"winning-cell"),k.classList.remove("player".concat(this.player)),setTimeout(function(){b.restartGame()},4e3)}return this.roundWinsByPlayer["player"+this.player]+=1,void(5!==this.roundWinsByPlayer.player1&&5!==this.roundWinsByPlayer.player2)}return d=!this.boardStatus.includes(""),d?void this.restartGame():void this.managePlayerChange()}},{key:"managePlayerChange",value:function(){this.player="1"===this.player?"2":"1"}},{key:"restartGame",value:function(){this.player="1",this.boardStatus.fill("");for(var a=document.querySelectorAll(".flex-item"),b=a.length,c=["player1","player2","player1Win","player2Win","winning-cell"],d=0;d<b;d++){var e;(e=a[d].classList).remove.apply(e,c)}}}]),b}(o.SwordGames)},"./src/sass/main.scss":/*!****************************!*\
  !*** ./src/sass/main.scss ***!
  \****************************/(a,b,c)=>{c.r(b)}},c={};(()=>{a.d=(b,c)=>{for(var d in c)a.o(c,d)&&!a.o(b,d)&&Object.defineProperty(b,d,{enumerable:!0,get:c[d]})}})(),(()=>{a.o=(a,b)=>Object.prototype.hasOwnProperty.call(a,b)})(),(()=>{a.r=(a)=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})}})(),a("./src/index.js");a("./src/sass/main.scss")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,