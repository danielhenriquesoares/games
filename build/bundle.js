(()=>{"use strict";function a(d){var e=c[d];if(void 0!==e)return e.exports;var f=c[d]={exports:{}};return b[d](f,f.exports,a),f.exports}var b={"./src/index.js":/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/(a,b,c)=>{c.r(b);var d=c(/*! ./tictactoe */"./src/tictactoe.js"),e=c(/*! ./sass/main.scss */"./src/sass/main.scss");(function(){window.addEventListener("scroll",function(){document.querySelector("header").style.opacity=document.documentElement.scrollTop>150?.9:1});var a=document.getElementById("sword-logo"),b=document.getElementById("facebook"),c=document.getElementById("twitter"),e=document.getElementById("instagram"),f=document.getElementById("send");a.src="./assets/img/SWORD_Health_logo.svg",b.src="./assets/img/facebook.svg",c.src="./assets/img/twitter.svg",e.src="./assets/img/instagram.svg",f.src="./assets/img/send.svg";var g=document.getElementById("select-grid-size");g.addEventListener("change",function(a){g.setAttribute("disabled","disabled");try{document.querySelectorAll("[data-game-area]").forEach(function(a){a.style.visibility="visible"}),document.getElementById("time-counter").style.visibility="visible";var b=new d.TicTacToe(+a.target.value);b.onInit()}catch(a){console.error(a)}})}).call()},"./src/swordgames.js":/*!***************************!*\
  !*** ./src/swordgames.js ***!
  \***************************/(a,b,c)=>{function d(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function e(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function f(a,b,c){return b&&e(a.prototype,b),c&&e(a,c),a}c.r(b),c.d(b,{SwordGames:()=>g});var g=function(){function a(){d(this,a),this.game="tictactoe",this.player="1",this.boardStatus=[],this.winningConditions=[],this.roundWinsByPlayer={player1:0,player2:0},this.currentTimeSpent=0,this.clockId=null,this.statistics={totalGamesPlayed:0,history:[],aggregatedTime:"00:00:00",player1Wins:0,player2Wins:0};var b=localStorage.getItem("stats");return b?void(this.statistics=JSON.parse(b)):void localStorage.setItem("stats",JSON.stringify(this.statistics))}return f(a,[{key:"onInit",value:function(){throw"NotImplementedException"}},{key:"buildBoard",value:function(){throw"NotImplementedException"}},{key:"setEventListeners",value:function(){throw"NotImplementedException"}},{key:"onDestroy",value:function(){if("tictactoe"===this.game)for(var a=document.querySelectorAll(".flex-item"),b=a.length,c=0;c<b;c++)a[c].removeEventListener("click",this.onCellClicked)}},{key:"highlightSelectedPlayer",value:function(){var a=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0];return a?void(document.querySelectorAll("[data-player=\"1\"]").forEach(function(a){a.classList.add("current-player")}),document.querySelectorAll("[data-player=\"2\"]").forEach(function(a){a.classList.remove("current-player")})):(document.querySelectorAll("[data-player=\"1\"]").forEach(function(a){a.classList.toggle("current-player")}),void document.querySelectorAll("[data-player=\"2\"]").forEach(function(a){a.classList.toggle("current-player")}))}},{key:"updatePlayerCount",value:function(){var a=this;document.querySelectorAll("[data-player-count-id=\"".concat(this.player,"\"]")).forEach(function(b){b.innerText=a.roundWinsByPlayer["player".concat(a.player)]})}},{key:"timeCounter",value:function(){var a=Math.floor,b=a(this.currentTimeSpent/3600),c=a((this.currentTimeSpent-3600*b)/60),d=this.currentTimeSpent-3600*b-60*c;return 10>b&&(b="0"+b),10>c&&(c="0"+c),10>d&&(d="0"+d),b+":"+c+":"+d}},{key:"clock",value:function(){var a=this;this.clockId=setInterval(function(){document.querySelectorAll("[data-time-counter]").forEach(function(b){b.innerText=a.timeCounter()}),a.currentTimeSpent++},1e3)}},{key:"timeAccumulator",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"00:00:00";if(/\d{2}:\d{2}:\d{2}/.test(a)){var b=["00","00","00"],c=a.split(":"),d=this.statistics.aggregatedTime.split(":"),e=+c[2]+ +d[2],f=+c[1]+ +d[1],g=+c[0]+ +d[0];if(60<=e){var i=e/60<<0;f+=i,e-=60*i}if(60<=f){var j=f/60<<0;g+=j,f-=60*j}return b[0]=10>g?"0"+g:g.toString(),b[1]=10>f?"0"+f:f.toString(),b[2]=10>e?"0"+e:e.toString(),b.join(":")}return this.statistics.aggregatedTime}},{key:"restartGame",value:function(){this.player="1",this.boardStatus.fill("");for(var a=document.querySelectorAll(".flex-item"),b=a.length,c=["player1","player2","player1Win","player2Win","winning-cell"],d=0;d<b;d++){var e;(e=a[d].classList).remove.apply(e,c)}this.highlightSelectedPlayer(!0)}},{key:"triggerPopup",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",b=function a(){var b=document.getElementById("message");document.getElementById("modal-close").removeEventListener("click",a),document.body.removeChild(b)},c=document.createElement("div");c.id="message",c.classList.add("modal"),c.innerHTML="\n\t\t<div class=\"modal-content\">\n\t\t\t<div id=\"modal-close\" class=\"close\">&times;</div>\n\t\t\t<h1>Winner!!!</h1>\n\t\t\t<div class=\"body\">\n\t\t\t\tCongrats ".concat(a,"!!!\n\t\t\t</div>\n\t\t</div>\n\t\t"),document.body.appendChild(c),setTimeout(function(){document.getElementById("modal-close").addEventListener("click",b)})}},{key:"updateStatistics",value:function(){var a=Math.round,b=!(0<arguments.length&&void 0!==arguments[0])||arguments[0];if(this.statistics.totalGamesPlayed){var c=a(100*(this.statistics.player1Wins/this.statistics.totalGamesPlayed)),d=a(100*(this.statistics.player2Wins/this.statistics.totalGamesPlayed));document.getElementById("p1W").innerText=c+"%",document.getElementById("p1L").innerText=100-c+"%",document.getElementById("p2W").innerText=d+"%",document.getElementById("p2L").innerText=100-d+"%";for(var e=0;e<this.statistics.totalGamesPlayed&&9>e;e++)document.querySelector("[data-played-matches=\"".concat(e,"\"]")).classList.add("played"),document.querySelector("[data-game-history=\"".concat(e,"\"]")).innerText=this.statistics.history[e];9<this.statistics.totalGamesPlayed&&(document.getElementById("extra").innerText="+ "+(this.statistics.totalGamesPlayed-9));var f=document.getElementById("agreggated-time");f.innerText=b?this.statistics.aggregatedTime:this.timeAccumulator(this.timeCounter())}}}]),a}()},"./src/tictactoe.js":/*!**************************!*\
  !*** ./src/tictactoe.js ***!
  \**************************/(a,b,c)=>{function d(a){"@babel/helpers - typeof";return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},d(a)}function e(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function f(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function g(a,b,c){return b&&f(a.prototype,b),c&&f(a,c),a}function h(a,b,c){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(a,b,c){var d=i(a,b);if(d){var e=Object.getOwnPropertyDescriptor(d,b);return e.get?e.get.call(c):e.value}},h(a,b,c||a)}function i(a,b){for(;!Object.prototype.hasOwnProperty.call(a,b)&&(a=p(a),null!==a););return a}function j(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),b&&k(a,b)}function k(a,b){return k=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a},k(a,b)}function l(a){var b=o();return function(){var c,d=p(a);if(b){var e=p(this).constructor;c=Reflect.construct(d,arguments,e)}else c=d.apply(this,arguments);return m(this,c)}}function m(a,b){return b&&("object"===d(b)||"function"==typeof b)?b:n(a)}function n(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function o(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(a){return!1}}function p(a){return p=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)},p(a)}c.r(b),c.d(b,{TicTacToe:()=>r});var q=c(/*! ./swordgames */"./src/swordgames.js"),r=function(a){function b(){var a,d=0<arguments.length&&void 0!==arguments[0]?arguments[0]:3;return e(this,b),a=c.call(this),a.boardSize=d,a}j(b,a);var c=l(b);return g(b,[{key:"onInit",value:function(){var a=this;this.winningConditions=Array.from({length:2*this.boardSize+2},function(){return Array(a.boardSize)}),this.boardStatus=Array(this.boardSize*this.boardSize).fill(""),this.buildRows(),this.buildCols(),this.buildLtrDiag(),this.buildRtrDiag(),this.buildBoard(),this.setEventListeners(),h(p(b.prototype),"highlightSelectedPlayer",this).call(this,!0),this.clock(),this.updateStatistics()}},{key:"buildRows",value:function(){for(var a=-1,b=0;b<this.boardSize;b++)for(var c=0;c<this.boardSize;c++)++a,this.winningConditions[b][c]=a}},{key:"buildCols",value:function(){for(var a=-1,b=this.winningConditions.length,c=0;c<this.boardSize;c++)for(var d=this.boardSize;d<=b-3;d++)++a,this.winningConditions[d][c]=a}},{key:"buildLtrDiag",value:function(){for(var a=this.winningConditions.length,b=0;b<this.boardSize;b++)this.winningConditions[a-2][b]=b*(this.boardSize+1)}},{key:"buildRtrDiag",value:function(){for(var b=this.boardSize-1,a=this.winningConditions.length,c=0;c<this.boardSize;c++)this.winningConditions[a-1][c]=c*b+b}},{key:"buildBoard",value:function(){for(var a=document.querySelector("#board"),b="",c=-1,d=0;d<this.boardSize;d++){b+="<div class=\"flex-container\">";for(var e=0;e<this.boardSize;e++)++c,b+="<div class=\"flex-item\" data-cell-id=\"".concat(c,"\"></div>");b+="</div>"}a.innerHTML=b}},{key:"setEventListeners",value:function(){for(var a=document.querySelectorAll(".flex-item"),b=a.length,c=0;c<b;c++)a[c].addEventListener("click",this.onCellClicked.bind(this))}},{key:"onCellClicked",value:function(a){try{var b=+a.target.dataset.cellId;if(console.debug("on cell clicked",this.dataset),""!==this.boardStatus[b])return;this.cellPlayedHandler(a.target,b)}catch(a){console.error(a)}}},{key:"cellPlayedHandler",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null,b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:-1;if(!a||-1===b)throw"InvalidCellException";a.classList.add("1"===this.player?"player1":"player2"),this.boardStatus[b]=this.player,this.checkWin()}},{key:"checkWin",value:function(){for(var a,c=this,d=!1,e=!1,f=this.winningConditions.length,g=null,j=function(a){g=c.winningConditions[a];for(var b=[],e=0;e<c.boardSize;e++)b.push(c.boardStatus[g[e]]);return b.some(function(a){return""===a})?"continue":b.every(function(a){return a===b[0]})?(d=!0,"break"):void 0},k=0;k<f&&(a=j(k),"continue"===a||"break"!==a);k++);if(d){for(var i=0;i<this.boardSize;i++){var l=g[i],m=document.querySelector("[data-cell-id=\"".concat(l,"\"]"));m.classList.add("player".concat(this.player,"Win"),"winning-cell"),m.classList.remove("player".concat(this.player))}if(setTimeout(function(){c.restartGame()},4e3),this.roundWinsByPlayer["player"+this.player]+=1,this.updatePlayerCount(),5===this.roundWinsByPlayer.player1||5===this.roundWinsByPlayer.player2){clearInterval(this.clockId);var n=5===this.roundWinsByPlayer.player1?1:2;h(p(b.prototype),"triggerPopup",this).call(this,1==n?"player1":"player2"),document.querySelectorAll("[data-time-counter]").forEach(function(a){a.innerText=c.timeCounter()}),document.querySelectorAll("[data-player-count-id]").forEach(function(a){a.innerText=0}),document.querySelectorAll("[data-game-area]").forEach(function(a){a.style.visibility="hidden"}),document.getElementById("time-counter").style.visibility="hidden",document.getElementById("board").innerHTML="";var o=document.getElementById("select-grid-size");o.value="---",o.removeAttribute("disabled"),this.statistics.totalGamesPlayed+=1;var q=this.statistics.history.length;9>q?this.statistics.history.push(1==n?"P1":"P2"):this.statistics.history[q-1]=1==n?"P1":"P2",this.statistics.aggregatedTime=this.timeAccumulator(this.timeCounter()),1==n?this.statistics.player1Wins+=1:this.statistics.player2Wins+=1,this.roundWinsByPlayer.player1=0,this.roundWinsByPlayer.player2=0,this.boardStatus.length=0,this.winningConditions.length=0,this.currentTimeSpent=0,this.onDestroy(),this.updateStatistics(!1),localStorage.setItem("stats",JSON.stringify(this.statistics)),document.getElementsByClassName("statistics-container")[0].scrollIntoView({behavior:"smooth",block:"center"})}return}return e=!this.boardStatus.includes(""),e?void this.restartGame():void this.managePlayerChange()}},{key:"managePlayerChange",value:function(){this.player="1"===this.player?"2":"1",h(p(b.prototype),"highlightSelectedPlayer",this).call(this)}}]),b}(q.SwordGames)},"./src/sass/main.scss":/*!****************************!*\
  !*** ./src/sass/main.scss ***!
  \****************************/(a,b,c)=>{c.r(b)}},c={};(()=>{a.d=(b,c)=>{for(var d in c)a.o(c,d)&&!a.o(b,d)&&Object.defineProperty(b,d,{enumerable:!0,get:c[d]})}})(),(()=>{a.o=(a,b)=>Object.prototype.hasOwnProperty.call(a,b)})(),(()=>{a.r=(a)=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})}})(),a("./src/index.js");a("./src/sass/main.scss")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,